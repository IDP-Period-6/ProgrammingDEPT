{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\ndrivetrain_inertial = Inertial(Ports.PORT3)\ndrivetrain = SmartDrive(left_drive_smart, right_drive_smart, drivetrain_inertial, 200, 320, 40, MM, 1)\ndistance_4 = Distance(Ports.PORT4)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\nvexcode_initial_drivetrain_calibration_completed = False\ndef calibrate_drivetrain():\n    # Calibrate the Drivetrain Inertial\n    global vexcode_initial_drivetrain_calibration_completed\n    sleep(200, MSEC)\n    brain.screen.print(\"Calibrating\")\n    brain.screen.next_row()\n    brain.screen.print(\"Inertial\")\n    drivetrain_inertial.calibrate()\n    while drivetrain_inertial.is_calibrating():\n        sleep(25, MSEC)\n    vexcode_initial_drivetrain_calibration_completed = True\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n\n\n# Calibrate the Drivetrain\ncalibrate_drivetrain()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\ndef Main():\n    forwardIsClear() = False\n    robotFinished = False\n    startOrStop = False #This means stop\n    objectDetected = distance_4.is_object_detected()\n\n    #Checking to see if the object is closer or farther then 5 MM\n    while startOrStop = False:\n        if distance_4.object_distance(MM) > 5:\n            drivetrain.stop()\n            startOrStop = False\n        elif distance_4.object_distance(MM) < 5:\n            startOrStop = True\n\n    # This checks if the forward is clear using the same \n    # concept of the startOrStop while loop\n    def forwardIsClear():\n        if distance_4.object_distance(MM) > 5:\n            forwardIsClear = True\n        elif distance_4.object_distance(MM) < 5:\n            forwardIsClear = False\n\n    # This is checking to see if the robot still hasnt pulled the lever which is the robotFinished variable\n    # while checking to see if the robot is still moving, then it checks to see if it's clear to drive and \n    # continue driving otherwise it will reverse a little bit and turn to look for another path\n    while robotFinished == False and startOrStop == True:\n        forwardIsClear()\n        if forwardIsClear == True:\n            drivetrain.drive_for(FORWARD,200,MM)\n        elif forwardIsClear == False:\n            drivetrain.drive_for(REVERSE,50,MM)\n            drivetrain.turn_for(LEFT,90,DEGREES)\n            forwardIsClear()\n","textLanguage":"python","robotConfig":[{"port":[1,2,3],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel200mm","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}},{"port":[4],"name":"distance_4","customName":false,"deviceType":"Distance","deviceClass":"distance","setting":{}}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}